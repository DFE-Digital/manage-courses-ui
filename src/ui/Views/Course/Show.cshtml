@model VariantViewModel

@{
  Layout = "_Layout";
  ViewBag.Title = Model.Course.Name;
  var link = "mailto:becomingateacher@digital.education.gov.uk?subject=Problem%20with%20course%20" + Model.Course.ProgrammeCode;

  var courseEnrichment = Model.CourseEnrichment;
  var routeData = courseEnrichment.RouteData;
}

<a href="@Url.Action("Show", "Organisation", new {ucasCode = Model.Course.UcasCode})" class="govuk-back-link">Back</a>

<main role="main" class="govuk-main-wrapper" id="main-content">
  @await Html.PartialAsync("~/Views/Shared/_Alerts.cshtml")
  @await Html.PartialAsync("Shared/ErrorSummaryCourseOverview.cshtml")

  <h1 class="govuk-heading-xl">
    <span class="govuk-caption-xl">@Model.Course.Type</span>
    @Model.Course.Name (@Model.Course.ProgrammeCode)
  </h1>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <div class="course-parts">
        <div class="course-parts__item">
          <h2 class="course-parts__title">Information from UCAS</h2>

          @if(Model.Course.StatusAsEnum != CourseVariantStatus.Running)
          {
            <div class="govuk-warning-text govuk-warning-text--inline">
              <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
              <strong class="govuk-warning-text__text">
                @if(Model.Course.StatusAsEnum == CourseVariantStatus.New)
                {
                  <text>This course is new and not yet running.</text>
                }
                else
                {
                  <text>This course is not running.</text>
                }
              </strong>
            </div>
            <p class="govuk-body">
              @if(Model.Course.StatusAsEnum == CourseVariantStatus.New)
              {
                <text>It won&#8217;t appear online until one or more training locations are set to &ldquo;running&rdquo; in <a href='https://update.ucas.co.uk/netupdate2/Welcome.htm'>UCAS web-link</a>.</text>
              }
              else
              {
                <text>It won&#8217;t appear online. You can publish it by changing the status of one or more training locations to &ldquo;running&rdquo; in <a href='https://update.ucas.co.uk/netupdate2/Welcome.htm'>UCAS web-link</a>.</text>
              }
            </p>
          }

          <p class="govuk-body">You can only change this information using <a href="https://update.ucas.co.uk/netupdate2/Welcome.htm">UCAS web-link</a>. Changes will usually appear here within one working day.</p>

          <dl class="govuk-list govuk-list--description">
            @if (!string.IsNullOrEmpty(@Model.Course.Status))
            {
              <dt>Status:</dt>
              <dd>@Model.Course.Status</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.Name)) {
              <dt>Name:</dt>
              <dd>@Model.Course.Name</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.UcasCode)) {
              <dt>Training provider code:</dt>
              <dd>@Model.Course.UcasCode</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.ProgrammeCode)) {
              <dt>Training programme code:</dt>
              <dd>@Model.Course.ProgrammeCode</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.Accrediting)) {
              <dt>Accredited provider:</dt>
              <dd>@Model.Course.Accrediting</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.GetRoute())) {
              <dt>Route:</dt>
              <dd>@Model.Course.GetRoute()</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.Subjects)) {
              <dt>Subjects:</dt>
              <dd>@Model.Course.Subjects</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.GetStudyMode())) {
              <dt>Mode of study:</dt>
              <dd>@Model.Course.GetStudyMode()</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.GetQualification())) {
              <dt>Qualification:</dt>
              <dd>@Model.Course.GetQualification()</dd>
            }
          </dl>
        </div>

      @if(Model.Course.StatusAsEnum != CourseVariantStatus.NotRunning)
      {
        @await Html.PartialAsync("shared/_AboutCourseOverview", Model.CourseEnrichment)

        var partialName = Model.IsSalary ? "shared/_SalaryBasedCourseOverview" : "shared/_FeeBasedCourseOverview";
        @await Html.PartialAsync(partialName, Model.CourseEnrichment)

        @await Html.PartialAsync("shared/_RequirementsCourseOverview", Model.CourseEnrichment)
      }

        <div class="course-parts__item">
          <h2 class="course-parts__title">Training locations</h2>
          @foreach (var school in Model.Course.Schools)
          {
            <h3 class="govuk-heading-s">@school.LocationName (Code: @school.Code)</h3>
            <dl class="govuk-list govuk-list--description">
              @if (!string.IsNullOrEmpty(@school.Address)) {
                <dt>Address:</dt>
                <dd>@school.Address</dd>
              }
              @if (!string.IsNullOrEmpty(@school.Status))
              {
                <dt>Status:</dt>
                <dd>@school.GetSchoolStatus()</dd>
              }
              @if (!string.IsNullOrEmpty(@school.ApplicationsAcceptedFrom)) {
                <dt>Apply from:</dt>
                <dd>@school.ApplicationsAcceptedFrom</dd>
              }
            </dl>
          }
        </div>
      </div>
      <p class="govuk-body">
        <a href="@link" class="govuk-link">Contact the Becoming a Teacher team to report a problem</a>
      </p>
    </div>

    <div class="govuk-grid-column-one-third">
    @if(Model.Course.StatusAsEnum != CourseVariantStatus.NotRunning)
    {
      <aside class="related">
        @switch(courseEnrichment.DeterminePublicationState())
        {
          case WorkflowStatus.Blank:
            <div class="govuk-tag govuk-tag--empty">empty</div>
            break;
          case WorkflowStatus.SubsequentDraft:
            <div class="govuk-tag govuk-tag--draft">draft</div>
            break;
          case WorkflowStatus.Published:
            <div class="govuk-tag govuk-tag--published">published</div>
            break;
        }

        @if (courseEnrichment.DeterminePublicationState() == WorkflowStatus.Blank)
        {
          <p class="govuk-body">You need to complete and publish this information.</p>
          <hr class="related__section-break">
        }

        @if (courseEnrichment.DeterminePublicationState() == WorkflowStatus.SubsequentDraft)
        {
          <p class="govuk-body">You have unpublished changes.</p>
          <p class="govuk-body">Last saved:<br />@courseEnrichment.DraftLastUpdatedUtc.DateString()</p>
          @if (courseEnrichment.LastPublishedUtc.HasValue)
          {
            <p class="govuk-body">Last published:<br />@courseEnrichment.LastPublishedUtc.DateString()</p>
          }
          <hr class="related__section-break">
        }

        @if ((courseEnrichment.LastPublishedUtc.HasValue) && !(courseEnrichment.DeterminePublicationState() == WorkflowStatus.SubsequentDraft))
        {
          <p class="govuk-body">Last published:<br />@courseEnrichment.LastPublishedUtc.DateString()</p>
          <hr class="related__section-break">
        }

        @if (courseEnrichment.DeterminePublicationState() != WorkflowStatus.Published)
        {
          <h4 class="govuk-heading-m">Preview</h4>
          <p class="govuk-body">See how this course looks with your changes.</p>
          <p class="govuk-body">Preview your course to check for mistakes before publishing.</p>
          <p class="govuk-body"><a asp-action="Preview">Preview course</a></p>

          <hr class="related__section-break">

          <h4 class="govuk-heading-m">Publish</h4>
          <p class="govuk-body">Publish your changes.</p>
          <p class="govuk-body">You can make changes to this course after publishing it.</p>

          <form asp-route="publish" method="post">
            <input type="submit" class="govuk-button" value="Publish" />
          </form>

          <hr class="related__section-break">
        }

        @if(Model.AllowLiveView)
        {
          <h4 class="govuk-heading-m">View on website</h4>
          <p class="govuk-body">See how this course currently looks to applicants:</p>
          <p class="govuk-body"><a href="@Model.LiveSearchUrl">View on website</a></p>
        }
        else if (!(Model.AllowLiveView) && (courseEnrichment.DeterminePublicationState() == WorkflowStatus.Published))
        {
          <h4 class="govuk-heading-m">Preview</h4>
          <p class="govuk-body">See how this course looks:</p>
          <p class="govuk-body"><a asp-action="Preview">Preview course</a></p>
        }
      </aside>
    }
    </div>
  </div>
</main>
