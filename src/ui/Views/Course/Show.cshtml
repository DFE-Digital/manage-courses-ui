@model CourseViewModel
@using WorkflowStatus = GovUk.Education.ManageCourses.Ui.ViewModels.Enums.WorkflowStatus
@{
  Layout = "_Layout";
  ViewBag.Title = Model.Course.CourseTitle;
  var link = $"mailto:becomingateacher@digital.education.gov.uk?subject=Problem%20with%20course%20{Model.Course.ProviderCode}%20{Model.Course.CourseCode}";

  var courseEnrichment = Model.CourseEnrichment;
  var routeData = courseEnrichment.RouteData;
}

<nav class="govuk-breadcrumbs">
  <ol class="govuk-breadcrumbs__list">
    @if (Model.MultipleOrganisations) {
      <li class="govuk-breadcrumbs__list-item">
        <a href="@Url.Action("index", "Organisations")" class="govuk-breadcrumbs__link">Organisations</a>
      </li>
    }
    <li class="govuk-breadcrumbs__list-item">
      <a href="@Url.Action("Show", "Organisation", new {providerCode = Model.Course.ProviderCode})" class="govuk-breadcrumbs__link">@Model.ProviderName</a>
    </li>
    <li class="govuk-breadcrumbs__list-item">
      <a href="@Url.Action("Index", "Course", new {providerCode = Model.Course.ProviderCode})" class="govuk-breadcrumbs__link">Courses</a>
    </li>
    <li class="govuk-breadcrumbs__list-item" aria-current="page">
      @Model.Course.CourseTitle (@Model.Course.CourseCode)
    </li>
  </ol>
</nav>

<main role="main" class="govuk-main-wrapper" id="main-content">
  @await Html.PartialAsync("~/Views/Shared/_Alerts.cshtml")
  @await Html.PartialAsync("Shared/ErrorSummaryCourseOverview.cshtml")

  <h1 class="govuk-heading-xl">
    <span class="govuk-caption-xl">@Model.Course.Type</span>
    @Model.Course.CourseTitle (@Model.Course.CourseCode)
  </h1>


  @{ /* Intentionally omitting `data-module="tabs"`, as we don't need the real tabs functionality, just the styling. */ }
  <div class="course-tabs govuk-tabs">
    <h2 class="govuk-tabs__title">Contents</h2>

    <ul class="govuk-tabs__list" role="tablist">
      <li class="govuk-tabs__list-item" role="presentation">
        <a class="govuk-tabs__tab govuk-tabs__tab--selected" href="#description" id="tab_description" role="tab" aria-controls="description" tabindex="0" aria-selected="true">
          Description<br>
          <span class="govuk-body-s govuk-!-font-weight-regular pointer-events-none">Content, fees and eligibility</span>
        </a>
      </li>

      <li class="govuk-tabs__list-item" role="presentation">
        <a class="govuk-tabs__tab" href="https://localhost:3000/organisations/2AT/courses/3CXD" role="tab" tabindex="-1" aria-selected="false">
          Basic details<br>
          <span class="govuk-body-s govuk-!-font-weight-regular pointer-events-none">Locations, outcome, subject</span>
        </a>
      </li>
    </ul>

    <section class="govuk-tabs__panel" id="description" role="tabpanel" aria-labelledby="tab_description">
      <div class="govuk-grid-row govuk-!-margin-top-4">
        <div class="govuk-grid-column-two-thirds">
          <div class="course-parts">
            @if(Model.Course.StatusAsEnum != CourseRunningStatus.NotRunning)
            {
              @await Html.PartialAsync("shared/_AboutCourseOverview", Model.CourseEnrichment)

              var partialName = Model.IsSalary ? "shared/_SalaryBasedCourseOverview" : "shared/_FeeBasedCourseOverview";
              @await Html.PartialAsync(partialName, Model.CourseEnrichment)

              @await Html.PartialAsync("shared/_RequirementsCourseOverview", Model.CourseEnrichment)
            }
          </div>
          <p class="govuk-body">
            <a href="@link" class="govuk-link">Contact the Becoming a Teacher team to report a problem</a>
          </p>
        </div>

        <div class="govuk-grid-column-one-third">
        @if(Model.Course.StatusAsEnum != CourseRunningStatus.NotRunning)
        {
          <aside class="related">
            @switch(courseEnrichment.DeterminePublicationState())
            {
              case WorkflowStatus.Blank:
                <div class="govuk-tag govuk-tag--empty">empty</div>
                break;
              case WorkflowStatus.SubsequentDraft:
                <div class="govuk-tag govuk-tag--published">published *</div>
                break;
              case WorkflowStatus.Published:
                <div class="govuk-tag govuk-tag--published">published</div>
                break;
              case WorkflowStatus.InitialDraft:
                <div class="govuk-tag govuk-tag--draft">draft</div>
                break;
            }

            @if (courseEnrichment.DeterminePublicationState() == WorkflowStatus.Blank)
            {
              <div class="related__block">
                <p class="govuk-body">You need to complete and publish this information.</p>
              </div>
            }

            @if (courseEnrichment.DeterminePublicationState() == WorkflowStatus.SubsequentDraft)
            {
              <div class="related__block">
                <p class="govuk-body">* You have unpublished changes.</p>
                <p class="govuk-body">Last saved:<br />@courseEnrichment.DraftLastUpdatedUtc.DateString()</p>
                @if (courseEnrichment.LastPublishedUtc.HasValue)
                {
                  <p class="govuk-body">Last published:<br />@courseEnrichment.LastPublishedUtc.DateString()</p>
                }
              </div>
            }

            @if ((courseEnrichment.LastPublishedUtc.HasValue) && !(courseEnrichment.DeterminePublicationState() == WorkflowStatus.SubsequentDraft))
            {
              <div class="related__block">
                <p class="govuk-body">Last published:<br />@courseEnrichment.LastPublishedUtc.DateString()</p>
              </div>
            }

            @if (courseEnrichment.DeterminePublicationState() != WorkflowStatus.Published)
            {
              <div class="related__block">
                <h4 class="govuk-heading-m">Preview</h4>
                <p class="govuk-body">See how this course looks with your changes.</p>
                <p class="govuk-body">Preview your course to check for mistakes before publishing.</p>
                <p class="govuk-body"><a asp-action="Preview">Preview course</a></p>
              </div>

              <div class="related__block">
                <h4 class="govuk-heading-m">Publish</h4>
                <p class="govuk-body">Publish your changes.</p>
                <p class="govuk-body">You can make changes to this course after publishing it.</p>
                <form asp-route="publish" method="post" class="govuk-!-margin-bottom-5">
                  <input type="submit" class="govuk-button" value="Publish" />
                </form>
              </div>
            }

            @if (Model.Course.StatusAsEnum == CourseRunningStatus.Running)
            {
              <div class="related__block">
                <h4 class="govuk-heading-m">View on website</h4>
                <p class="govuk-body">See how this course currently looks to applicants:</p>
                <p class="govuk-body"><a href="@Model.LiveSearchUrl">View on website</a></p>
              </div>
            }
          </aside>
        }
        </div>
      </div>
    </section>
  </div>
</main>
