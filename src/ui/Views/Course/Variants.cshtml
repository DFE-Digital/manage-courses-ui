@model FromUcasViewModel

@{
  Layout = "_Layout";
  ViewBag.Title = Model.Course.Name;
  var link = "mailto:becomingateacher@digital.education.gov.uk?subject=Problem%20with%20course%20" + Model.Course.ProgrammeCode;

  var courseEnrichment = Model.CourseEnrichment;
}

<a href="@Url.Action("Courses", "Organisation", new {ucasCode = Model.Course.UcasCode})" class="govuk-back-link">Back</a>

@Html.Partial("~/Views/Shared/_Alerts.cshtml")

<main role="main" class="govuk-main-wrapper" id="main-content">
  <h1 class="govuk-heading-xl">
    <span class="govuk-caption-xl">@Model.Course.Type</span>
    @Model.Course.Name (@Model.Course.ProgrammeCode)
  </h1>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <div class="course-parts">
        <div class="course-parts__item">
          <h3 class="course-parts__title">Information from UCAS</h3>

          <dl class="govuk-list govuk-list--description">
            @if (Model.Course.Status.Equals("Running", StringComparison.InvariantCultureIgnoreCase))
            {
              if (!string.IsNullOrEmpty(@Model.Course.Name))
              {
                <dt>Name:</dt>
                <dd>@Model.Course.Name</dd>
              }
            }
            @*else
            {
              @Html.Partial("~/Views/Shared/_Alerts.cshtml")
            }*@
            @if (!string.IsNullOrEmpty(@Model.Course.Status))
            {
              <dt>Status:</dt>
              <dd>@Model.Course.Status</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.UcasCode))
            {
              <dt>Training provider code:</dt>
              <dd>@Model.Course.UcasCode</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.ProgrammeCode))
            {
              <dt>Training programme code:</dt>
              <dd>@Model.Course.ProgrammeCode</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.Accrediting))
            {
              <dt>Accredited provider:</dt>
              <dd>@Model.Course.Accrediting</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.GetRoute()))
            {
              <dt>Route:</dt>
              <dd>@Model.Course.GetRoute()</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.Subjects))
            {
              <dt>Subjects:</dt>
              <dd>@Model.Course.Subjects</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.GetStudyMode()))
            {
              <dt>Mode of study:</dt>
              <dd>@Model.Course.GetStudyMode()</dd>
            }
            @if (!string.IsNullOrEmpty(@Model.Course.GetQualification()))
            {
              <dt>Qualification:</dt>
              <dd>@Model.Course.GetQualification()</dd>
            }
          </dl>
        </div>

        <div class="course-parts__item">
          <h3 class="course-parts__title">About this course</h3>
          <a class="course-parts__action" href="@Url.Action("About", "Course", Model.RouteData)">Edit</a>
          <dl class="course-parts__fields">
            <dt class="course-parts__fields__label">
                About this course
            </dt>
            <dd class="course-parts__fields__value">
                @courseEnrichment?.AboutCourse.DisplayText()
            </dd>
            <dt class="course-parts__fields__label">
                Interview process (optional)
            </dt>
            <dd class="course-parts__fields__value">
                @courseEnrichment?.InterviewProcess.DisplayText()
            </dd>
            <dt class="course-parts__fields__label">
                How school placements work
            </dt>
            <dd class="course-parts__fields__value">
                @courseEnrichment?.HowSchoolPlacementsWork.DisplayText()
            </dd>
          </dl>
        </div>

        <div class="course-parts__item">
          <h3 class="course-parts__title">Requirements and eligbility</h3>
          <a class="course-parts__action" href="@Url.Action("Requirements", "Course", Model.RouteData)">Edit</a>
          <dl class="course-parts__fields">
            <dt class="course-parts__fields__label">
              Qualifications needed
            </dt>
            <dd class="course-parts__fields__value">
                @courseEnrichment?.Qualifications.DisplayText()
            </dd>
            <dt class="course-parts__fields__label">
              Personal qualities (optional)
            </dt>
            <dd class="course-parts__fields__value">
                @courseEnrichment?.PersonalQualities.DisplayText()
            </dd>
            <dt class="course-parts__fields__label">
              Other requirements (optional)
            </dt>
            <dd class="course-parts__fields__value">
                @courseEnrichment?.OtherRequirements.DisplayText()
            </dd>
          </dl>
        </div>

        <div class="course-parts__item">
          <h3 class="course-parts__title">Training locations</h3>
          @foreach (var school in Model.Course.Schools)
          {
            <h4 class="govuk-heading-s">@school.LocationName (Code: @school.Code)</h4>
            <dl class="govuk-list govuk-list--description">
              @if (!string.IsNullOrEmpty(@school.Address))
              {
                <dt>Address:</dt>
                <dd>@school.Address</dd>
              }
              @if (!string.IsNullOrEmpty(@school.Status))
              {
                <dt>Status:</dt>
                <dd>@school.GetSchoolStatus()</dd>
              }
              @if (!string.IsNullOrEmpty(@school.ApplicationsAcceptedFrom))
              {
                <dt>Apply from:</dt>
                <dd>@school.ApplicationsAcceptedFrom</dd>
              }
            </dl>
          }
        </div>
      </div>
      <p class="govuk-body">
        <a href="@link" class="govuk-link">Contact the Becoming a Teacher team to report a problem</a>
      </p>
    </div>
  </div>
</main>
